[project]
name = "LibraryPlatform"
version = "0.1.0"
description = "Platfrom for managing books and authors"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.5",
    "asyncpg>=0.30.0",
    "bcrypt>=4.3.0",
    "fastapi>=0.116.1",
    "passlib>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.10.1",
    "pydantic[email]>=2.11.7",
    "python-jose>=3.5.0",
    "python-multipart>=0.0.20",
    "uvicorn>=0.35.0",
]


[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
exclude = "grafana_storage/|migrations/|tests/|docs/"
strict = true
local_partial_types = true
warn_unreachable = true

[tool.ruff]
line-length = 80 # PEP8
target-version = "py313"
fix = true # Autofix
exclude = [
    "migrations",
    ".venv",
    ".qodo",
    "build",
    "dist",
    "tests/fixtures",
    "__pycache__",
]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = false # Do not format docstrings


[tool.ruff.lint.per-file-ignores]

"**/schemas/*.py" = [
    "N805" # Ignore first argument should be named self. Pydantic issue.
]
"schemas/*.py" = [
    "N805" # Ignore first argument should be named self. Pydantic issue.
]
"tests/*.py" = [
    "S101", # asserts
    "D100", # Docstring in a public module
    "D101", # Docstring in a public class
    "D102", # Docstring in a public method
    "D103", # Docstring in a public method
    "D104", # Docstring in a public function
    "S105", # hardcoded passwords
    "S404", # subprocess calls are for tests
    "S603", # do not require `shell=True`
    "S607", # partial executable paths
    "PT012", # simple statement in pytest.raises block
    "S106", # hardcoded assigned values
    "PLR2004" # magic value, for status codes
]

"src/*.py" = [
    "D100", # Docstring in a public module
    "RUF001", # Cyrylic letter
    "D104", # Missing docstring in a public package

]

[dependency-groups]
dev = [
    "coverage>=7.10.1",
    "httpx>=0.28.1",
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.7",
    "types-passlib>=1.7.7.20250602",
    "types-python-jose>=3.5.0.20250531",
]

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # maccabe
    "COM", # flake8-commas
    "D", # pydocstyle
    "DTZ", # flake8-datetimez
    "E", # pycodestyle
    "ERA", # flake8-eradicate
    "EXE", # flake8-executable
    "F", # pyflakes
    "FBT", # flake8-boolean-trap
    "FLY", # pyflint
    "FURB", # refurb
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N", # pep8-naming
    "PERF", # perflint
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff
    "S", # flake8-bandit
    "SIM", # flake8-simpify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T100", # flake8-debugger
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
    "YTT", # flake8-2020
]

# Игнорируем конфликтующие правила
ignore = [
    "D203", # incorrect-blank-line-before-class (конфликтует с D211)
    "D213", # multi-line-summary-second-line (конфликтует с D212)
    "COM812", # comma formatting conflicts with formatter
    "Q000", # quote style conflicts with formatter
    "Q003", # mixed quotes conflicts with formatter
]
